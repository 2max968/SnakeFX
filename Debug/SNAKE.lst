SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 03:04:30  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Entwicklung\Casio\SDK\Snake\SNAKE.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         SNAKE.c     1    /*****************************************************************/
         SNAKE.c     2    /*                                                               */
         SNAKE.c     3    /*   CASIO fx-9860G SDK Library                                  */
         SNAKE.c     4    /*                                                               */
         SNAKE.c     5    /*   File name : [ProjectName].c                                 */
         SNAKE.c     6    /*                                                               */
         SNAKE.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
         SNAKE.c     8    /*                                                               */
         SNAKE.c     9    /*****************************************************************/
         SNAKE.c    10    #include "fxlib.h"
         SNAKE.c    11    #include "timer.h"
         SNAKE.c    12    #include "SNAKE.h"
         SNAKE.c    13    #include <stdio.h>
         SNAKE.c    14    #include "Menu.h"
         SNAKE.c    15    #include "Game.h"
         SNAKE.c    16    #include "Maps.h"
         SNAKE.c    17    #include "MainMenuDetector.h"
         SNAKE.c    18    #include "Savegame.h"
         SNAKE.c    19    #include <string.h>
         SNAKE.c    20    #include "Scorescreen.h"
         SNAKE.c    21    
         SNAKE.c    22    #define STATE_MAINMENU 1
         SNAKE.c    23    #define STATE_DIFFSELECT 2
         SNAKE.c    24    #define STATE_MAPSELECT 3
         SNAKE.c    25    #define STATE_GAME 4
         SNAKE.c    26    #define STATE_GAMEOVERSCREEN 5
         SNAKE.c    27    #define STATE_HELP 6
         SNAKE.c    28    #define STATE_ABOUT 7
         SNAKE.c    29    #define STATE_SCORES 8
         SNAKE.c    30    
         SNAKE.c    31    const char *txtHelp = "[UP,8] Move up\n[DOWN, 2] Move down\n[\xE4, 4] Move left\n[RIGHT, 6] Move right\n[E
                         +XIT] Game Menu";
         SNAKE.c    32    const char *txtAbout = "Snake for\nCasio fx-9860GII\n\nby Max Haag";
         SNAKE.c    33    
         SNAKE.c    34    //****************************************************************************
         SNAKE.c    35    //  AddIn_main (Sample program main function)
         SNAKE.c    36    //
         SNAKE.c    37    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
         SNAKE.c    38    //                        : 0 = This application is launched by a strip in eACT application.
         SNAKE.c    39    //
         SNAKE.c    40    //              OptionNum : Strip number (0~3)
         SNAKE.c    41    //                         (This parameter is only used when isAppli parameter is 0.)
         SNAKE.c    42    //
         SNAKE.c    43    //  retval  :   1 = No error / 0 = Error
         SNAKE.c    44    //
         SNAKE.c    45    //****************************************************************************
         SNAKE.c    46    int AddIn_main(int isAppli, unsigned short OptionNum)
P   00000000              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=228
    00000000 9059                   MOV.W       L485,R0    ; H'FF1C
    00000002 E901                   MOV         #1,R9
         SNAKE.c    47    {
         SNAKE.c    48        unsigned int key;
         SNAKE.c    49        int score, exitReason, res, difficulty, map;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 03:04:30  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         SNAKE.c    50        unsigned int state = STATE_MAINMENU;
         SNAKE.c    51        char text[30];
         SNAKE.c    52        savegame_t scores;
         SNAKE.c    53    
         SNAKE.c    54        InitDetector();
    00000004 D32D                   MOV.L       L485+6,R3  ; _InitDetector
    00000006 3F0C                   ADD         R0,R15
    00000008 430B                   JSR         @R3
    0000000A 6E93                   MOV         R9,R14
         SNAKE.c    55        Bdisp_AllClr_DDVRAM();
    0000000C D22C                   MOV.L       L485+10,R2 ; _Bdisp_AllClr_DDVRAM
    0000000E 420B                   JSR         @R2
    00000010 0009                   NOP
         SNAKE.c    56        memset(&scores, 0, sizeof(savegame_t));
    00000012 E500                   MOV         #0,R5
    00000014 D32B                   MOV.L       L485+14,R3 ; _memset
    00000016 64F3                   MOV         R15,R4
    00000018 964E                   MOV.W       L485+2,R6  ; H'00C0
    0000001A 430B                   JSR         @R3
    0000001C 7404                   ADD         #4,R4
         SNAKE.c    57        LoadScores(&scores);
    0000001E 64F3                   MOV         R15,R4
    00000020 D229                   MOV.L       L485+18,R2 ; _LoadScores
    00000022 420B                   JSR         @R2
    00000024 7404                   ADD         #4,R4
         SNAKE.c    58    
         SNAKE.c    59        while(1)
    00000026              L460:                             
    00000026 6AD3                   MOV         R13,R10
    00000028 D828                   MOV.L       L485+22,R8 ; _ShowMenu
    0000002A 63D3                   MOV         R13,R3
    0000002C DC28                   MOV.L       L485+26,R12; _ShowText
    0000002E 60E3                   MOV         R14,R0
    00000030 4A00                   SHLL        R10
    00000032 3A3C                   ADD         R3,R10
    00000034 4A08                   SHLL2       R10
    00000036 8801                   CMP/EQ      #1,R0
    00000038 8D10                   BT/S        L430
    0000003A 4A08                   SHLL2       R10
    0000003C 8802                   CMP/EQ      #2,R0
    0000003E 8923                   BT          L432
    00000040 8803                   CMP/EQ      #3,R0
    00000042 892B                   BT          L434
    00000044 8804                   CMP/EQ      #4,R0
    00000046 894B                   BT          L435
    00000048 8805                   CMP/EQ      #5,R0
    0000004A 8957                   BT          L436
    0000004C 8806                   CMP/EQ      #6,R0
    0000004E 8973                   BT          L438
    00000050 8807                   CMP/EQ      #7,R0
    00000052 8976                   BT          L439
    00000054 8808                   CMP/EQ      #8,R0
    00000056 8979                   BT          L440
    00000058 AFE5                   BRA         L460
    0000005A 0009                   NOP
    0000005C              L430:                            ; case label 
         SNAKE.c    60        {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 03:04:30  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         SNAKE.c    61            switch(state)
         SNAKE.c    62            {
         SNAKE.c    63                case STATE_MAINMENU:
         SNAKE.c    64                    res = ShowMenu(0, "Start Game\nHelp\nAbout\nHighscores");
    0000005C DC1D                   MOV.L       L485+30,R12; L394
    0000005E 65C3                   MOV         R12,R5
    00000060 480B                   JSR         @R8
    00000062 E400                   MOV         #0,R4
    00000064 6403                   MOV         R0,R4
         SNAKE.c    65                    if(res == 0) state = STATE_DIFFSELECT;
    00000066 2448                   TST         R4,R4
    00000068 8920                   BT          L412
         SNAKE.c    66                    else if(res == 1) state = STATE_HELP;
    0000006A 6043                   MOV         R4,R0
    0000006C 8801                   CMP/EQ      #1,R0
    0000006E 8B01                   BF          L464
    00000070 A042                   BRA         L484
    00000072 E406                   MOV         #6,R4
    00000074              L464:                             
         SNAKE.c    67                    else if(res == 2) state = STATE_ABOUT;
    00000074 8802                   CMP/EQ      #2,R0
    00000076 8B01                   BF          L466
    00000078 A03E                   BRA         L484
    0000007A E407                   MOV         #7,R4
    0000007C              L466:                             
         SNAKE.c    68                    else if(res == 3) state = STATE_SCORES;
    0000007C 6043                   MOV         R4,R0
    0000007E 8803                   CMP/EQ      #3,R0
    00000080 8BD1                   BF          L460
    00000082 E408                   MOV         #8,R4
         SNAKE.c    69                    break;
    00000084 AFCF                   BRA         L460
    00000086 6E43                   MOV         R4,R14
    00000088              L432:                            ; case label 
         SNAKE.c    70                case STATE_DIFFSELECT:
         SNAKE.c    71                    difficulty = ShowMenu(1, "Easy\nMiddle\nHard\nExtreme");
    00000088 DE13                   MOV.L       L485+34,R14; L395
    0000008A 65E3                   MOV         R14,R5
    0000008C 480B                   JSR         @R8
    0000008E E401                   MOV         #1,R4
    00000090 6D03                   MOV         R0,R13
         SNAKE.c    72                    if(difficulty < 0) state = STATE_MAINMENU;
    00000092 4D11                   CMP/PZ      R13
    00000094 8B5E                   BF          L427
         SNAKE.c    73                    else state = STATE_MAPSELECT;
    00000096 E403                   MOV         #3,R4
         SNAKE.c    74                    break;
    00000098 AFC5                   BRA         L460
    0000009A 6E43                   MOV         R4,R14
    0000009C              L434:                            ; case label 
         SNAKE.c    75                case STATE_MAPSELECT:
         SNAKE.c    76                    map = MapSelector(&scores.scores[difficulty]);
    0000009C DE0F                   MOV.L       L485+38,R14; _MapSelector
    0000009E 64F3                   MOV         R15,R4
    000000A0 7404                   ADD         #4,R4
    000000A2 4E0B                   JSR         @R14
    000000A4 34AC                   ADD         R10,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 03:04:30  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000A6 6B03                   MOV         R0,R11
         SNAKE.c    77                    if(map < 0) state = STATE_DIFFSELECT;
    000000A8 4B11                   CMP/PZ      R11
    000000AA 8901                   BT          L471
    000000AC              L412:
    000000AC A001                   BRA         L483
    000000AE E402                   MOV         #2,R4
    000000B0              L471:                             
         SNAKE.c    78                    else state = STATE_GAME;
    000000B0 E404                   MOV         #4,R4
    000000B2              L483:                             
         SNAKE.c    79                    break;
    000000B2 AFB8                   BRA         L460
    000000B4 6E43                   MOV         R4,R14
    000000B6              L485:                             
    000000B6 FF1C                   .DATA.W     H'FF1C
    000000B8 00C0                   .DATA.W     H'00C0
    000000BA 0000                   .DATA.W     0
    000000BC <00000000>             .DATA.L     _InitDetector
    000000C0 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000000C4 <00000000>             .DATA.L     _memset
    000000C8 <00000000>             .DATA.L     _LoadScores
    000000CC <00000000>             .DATA.L     _ShowMenu
    000000D0 <00000000>             .DATA.L     _ShowText
    000000D4 <00000000>             .DATA.L     L394
    000000D8 <00000000>             .DATA.L     L395
    000000DC <00000000>             .DATA.L     _MapSelector
    000000E0              L435:                            ; case label 
         SNAKE.c    80                case STATE_GAME:
         SNAKE.c    81                    exitReason = RunGame(difficulty, &score, GetMap(map));
    000000E0 DC34                   MOV.L       L486+2,R12 ; _GetMap
    000000E2 DE35                   MOV.L       L486+6,R14 ; _RunGame
    000000E4 4C0B                   JSR         @R12
    000000E6 64B3                   MOV         R11,R4
    000000E8 6603                   MOV         R0,R6
    000000EA 65F3                   MOV         R15,R5
    000000EC 4E0B                   JSR         @R14
    000000EE 64D3                   MOV         R13,R4
         SNAKE.c    82                    if(exitReason == GAMEND_LOOSE) state = STATE_GAMEOVERSCREEN;
    000000F0 8802                   CMP/EQ      #2,R0
    000000F2 8F2F                   BF/S        L427
    000000F4 6403                   MOV         R0,R4
    000000F6 E405                   MOV         #5,R4
    000000F8              L484:                             
    000000F8 AF95                   BRA         L460
    000000FA 6E43                   MOV         R4,R14
    000000FC              L436:                            ; case label 
    000000FC 6EB3                   MOV         R11,R14
    000000FE 63B3                   MOV         R11,R3
    00000100 4E00                   SHLL        R14
    00000102 3E3C                   ADD         R3,R14
    00000104 4E08                   SHLL2       R14
    00000106 62F3                   MOV         R15,R2
    00000108 7204                   ADD         #4,R2
    0000010A 32AC                   ADD         R10,R2
    0000010C 6323                   MOV         R2,R3
    0000010E 33EC                   ADD         R14,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 03:04:30  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000110 62F2                   MOV.L       @R15,R2
    00000112 6132                   MOV.L       @R3,R1
    00000114 3123                   CMP/GE      R2,R1
    00000116 891D                   BT          L427
         SNAKE.c    83                    else state = STATE_MAINMENU;
         SNAKE.c    84                    break;
         SNAKE.c    85                case STATE_GAMEOVERSCREEN:
         SNAKE.c    86                    if(scores.scores[difficulty].scores[map].val < score)
         SNAKE.c    87                    {
         SNAKE.c    88                        ShowText("New Highscore");
    00000118 D828                   MOV.L       L486+10,R8 ; L397
    0000011A 4C0B                   JSR         @R12
    0000011C 6483                   MOV         R8,R4
         SNAKE.c    89                        scores.scores[difficulty].scores[map].val = score;
    0000011E 62F3                   MOV         R15,R2
    00000120 7204                   ADD         #4,R2
    00000122 3A2C                   ADD         R2,R10
    00000124 62F2                   MOV.L       @R15,R2
         SNAKE.c    90                        SaveScores(&scores);
    00000126 64F3                   MOV         R15,R4
    00000128 63A3                   MOV         R10,R3
    0000012A 3E3C                   ADD         R3,R14
    0000012C 2E22                   MOV.L       R2,@R14
    0000012E DE24                   MOV.L       L486+14,R14; _SaveScores
    00000130 4E0B                   JSR         @R14
    00000132 7404                   ADD         #4,R4
    00000134 A00E                   BRA         L427
    00000136 0009                   NOP
    00000138              L438:                            ; case label 
         SNAKE.c    91                    }
         SNAKE.c    92                    state = STATE_MAINMENU;
         SNAKE.c    93                    break;
         SNAKE.c    94                case STATE_HELP:
         SNAKE.c    95                    ShowText(txtHelp);
    00000138 DE22                   MOV.L       L486+18,R14; _txtHelp
    0000013A 4C0B                   JSR         @R12
    0000013C 64E2                   MOV.L       @R14,R4
    0000013E A009                   BRA         L427
    00000140 0009                   NOP
    00000142              L439:                            ; case label 
         SNAKE.c    96                    state = STATE_MAINMENU;
         SNAKE.c    97                    break;
         SNAKE.c    98                case STATE_ABOUT:
         SNAKE.c    99                    ShowText(txtAbout);
    00000142 DE21                   MOV.L       L486+22,R14; _txtAbout
    00000144 4C0B                   JSR         @R12
    00000146 64E2                   MOV.L       @R14,R4
    00000148 A004                   BRA         L427
    0000014A 0009                   NOP
    0000014C              L440:                            ; case label 
         SNAKE.c   100                    state = STATE_MAINMENU;
         SNAKE.c   101                    break;
         SNAKE.c   102                case STATE_SCORES:
         SNAKE.c   103                    ShowScores(&scores);
    0000014C DE1F                   MOV.L       L486+26,R14; _ShowScores
    0000014E 64F3                   MOV         R15,R4
    00000150 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 03:04:30  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000152 7404                   ADD         #4,R4
    00000154              L427:
    00000154 AF67                   BRA         L460
         SNAKE.c   104                    state = STATE_MAINMENU;
    00000156 6E93                   MOV         R9,R14
         SNAKE.c   105                    break;
         SNAKE.c   106            }
         SNAKE.c   107        }
         SNAKE.c   108    
         SNAKE.c   109        UninitDetector();
         SNAKE.c   110        return 1;
         SNAKE.c   111    }
         SNAKE.c   112    
         SNAKE.c   113    char* malloc_sec(int size)
    00000158              _malloc_sec:                     ; function: malloc_sec
                                                           ; frame size=40
    00000158 2FE6                   MOV.L       R14,@-R15
    0000015A 2FD6                   MOV.L       R13,@-R15
    0000015C 4F22                   STS.L       PR,@-R15
    0000015E 7FEC                   ADD         #-20,R15
         SNAKE.c   114    {
         SNAKE.c   115        char* ptr = (char*)malloc(size);
    00000160 D31B                   MOV.L       L486+30,R3 ; _malloc
    00000162 430B                   JSR         @R3
    00000164 1F41                   MOV.L       R4,@(4,R15)
    00000166 6E03                   MOV         R0,R14
         SNAKE.c   116        if(ptr == NULL)
    00000168 2EE8                   TST         R14,R14
    0000016A 8B1C                   BF          L477
         SNAKE.c   117        {
         SNAKE.c   118            unsigned int key;
         SNAKE.c   119            char text[10];
         SNAKE.c   120            PopUpWin(2);
    0000016C D319                   MOV.L       L486+34,R3 ; _PopUpWin
    0000016E 430B                   JSR         @R3
    00000170 E402                   MOV         #2,R4
         SNAKE.c   121            locate(3,3);
    00000172 E503                   MOV         #3,R5
    00000174 D218                   MOV.L       L486+38,R2 ; _locate
    00000176 420B                   JSR         @R2
    00000178 6453                   MOV         R5,R4
         SNAKE.c   122            sprintf(text, "Allocating %iBytes", size);
    0000017A 53F1                   MOV.L       @(4,R15),R3
    0000017C D217                   MOV.L       L486+42,R2 ; L405
    0000017E 2F36                   MOV.L       R3,@-R15
    00000180 2F26                   MOV.L       R2,@-R15
    00000182 64F3                   MOV         R15,R4
    00000184 D316                   MOV.L       L486+46,R3 ; _sprintf
    00000186 430B                   JSR         @R3
    00000188 7410                   ADD         #16,R4
    0000018A 7F08                   ADD         #8,R15
         SNAKE.c   123            locate(3,4);
    0000018C D212                   MOV.L       L486+38,R2 ; _locate
    0000018E E504                   MOV         #4,R5
    00000190 420B                   JSR         @R2
    00000192 E403                   MOV         #3,R4
         SNAKE.c   124            Print((uchar*)"Out of memory");




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 03:04:30  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000194 D413                   MOV.L       L486+50,R4 ; L406
    00000196 D314                   MOV.L       L486+54,R3 ; _Print
    00000198 430B                   JSR         @R3
    0000019A 0009                   NOP
    0000019C DD13                   MOV.L       L486+58,R13; _GetKey
         SNAKE.c   125            while(1) GetKey(&key);
    0000019E              L479:                             
    0000019E 4D0B                   JSR         @R13
    000001A0 64F3                   MOV         R15,R4
    000001A2 AFFC                   BRA         L479
    000001A4 0009                   NOP
    000001A6              L477:                             
         SNAKE.c   126        }
         SNAKE.c   127        return ptr;
    000001A6 60E3                   MOV         R14,R0
         SNAKE.c   128    }
    000001A8 7F14                   ADD         #20,R15
    000001AA 4F26                   LDS.L       @R15+,PR
    000001AC 6DF6                   MOV.L       @R15+,R13
    000001AE 000B                   RTS
    000001B0 6EF6                   MOV.L       @R15+,R14
    000001B2              L486:                             
    000001B2 0000                   .DATA.W     0
    000001B4 <00000000>             .DATA.L     _GetMap
    000001B8 <00000000>             .DATA.L     _RunGame
    000001BC <00000000>             .DATA.L     L397
    000001C0 <00000000>             .DATA.L     _SaveScores
    000001C4 <00000000>             .DATA.L     _txtHelp
    000001C8 <00000000>             .DATA.L     _txtAbout
    000001CC <00000000>             .DATA.L     _ShowScores
    000001D0 <00000000>             .DATA.L     _malloc
    000001D4 <00000000>             .DATA.L     _PopUpWin
    000001D8 <00000000>             .DATA.L     _locate
    000001DC <00000000>             .DATA.L     L405
    000001E0 <00000000>             .DATA.L     _sprintf
    000001E4 <00000000>             .DATA.L     L406
    000001E8 <00000000>             .DATA.L     _Print
    000001EC <00000000>             .DATA.L     _GetKey
         SNAKE.c   129    
         SNAKE.c   130    
         SNAKE.c   131    //****************************************************************************
         SNAKE.c   132    //**************                                              ****************
         SNAKE.c   133    //**************                 Notice!                      ****************
         SNAKE.c   134    //**************                                              ****************
         SNAKE.c   135    //**************  Please do not change the following source.  ****************
         SNAKE.c   136    //**************                                              ****************
         SNAKE.c   137    //****************************************************************************
         SNAKE.c   138    
         SNAKE.c   139    
         SNAKE.c   140    #pragma section _BR_Size
         SNAKE.c   141    unsigned long BR_Size;
         SNAKE.c   142    #pragma section
         SNAKE.c   143    
         SNAKE.c   144    
         SNAKE.c   145    #pragma section _TOP
         SNAKE.c   146    
         SNAKE.c   147    //****************************************************************************




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 03:04:30  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         SNAKE.c   148    //  InitializeSystem
         SNAKE.c   149    //
         SNAKE.c   150    //  param   :   isAppli   : 1 = Application / 0 = eActivity
         SNAKE.c   151    //              OptionNum : Option Number (only eActivity)
         SNAKE.c   152    //
         SNAKE.c   153    //  retval  :   1 = No error / 0 = Error
         SNAKE.c   154    //
         SNAKE.c   155    //****************************************************************************
         SNAKE.c   156    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
         SNAKE.c   157    {
         SNAKE.c   158        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L487+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L487:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
         SNAKE.c   159    }
         SNAKE.c   160    
         SNAKE.c   161    #pragma section
         SNAKE.c   162    
D   00000000              _txtHelp:                        ; static: txtHelp
    00000000 <00000000>             .DATA.L     L376
    00000004              _txtAbout:                       ; static: txtAbout
    00000004 <00000000>             .DATA.L     L378
C   00000000              L394:
    00000000 5374617274             .SDATA      "Start Game"
             2047616D65   
    0000000A 0A                     .DATA.B     H'0A
    0000000B 48656C70               .SDATA      "Help"
    0000000F 0A                     .DATA.B     H'0A
    00000010 41626F7574             .SDATA      "About"
    00000015 0A                     .DATA.B     H'0A
    00000016 4869676873             .SDATA      "Highscores"
             636F726573   
    00000020 00                     .DATA.B     H'00
    00000021 00000001               .RES.B      1
    00000022 00000002               .RES.W      1
    00000024              L395:
    00000024 45617379               .SDATA      "Easy"
    00000028 0A                     .DATA.B     H'0A
    00000029 4D6964646C             .SDATA      "Middle"
             65           
    0000002F 0A                     .DATA.B     H'0A
    00000030 48617264               .SDATA      "Hard"
    00000034 0A                     .DATA.B     H'0A
    00000035 4578747265             .SDATA      "Extreme"
             6D65         
    0000003C 00                     .DATA.B     H'00
    0000003D 00000001               .RES.B      1
    0000003E 00000002               .RES.W      1
    00000040              L397:
    00000040 4E65772048             .SDATA      "New Highscore"
             6967687363   
             6F7265       




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 03:04:30  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000004D 00                     .DATA.B     H'00
    0000004E 00000002               .RES.W      1
    00000050              L405:
    00000050 416C6C6F63             .SDATA      "Allocating %iBytes"
             6174696E67   
             2025694279   
             746573       
    00000062 00                     .DATA.B     H'00
    00000063 00000001               .RES.B      1
    00000064              L406:
    00000064 4F7574206F             .SDATA      "Out of memory"
             66206D656D   
             6F7279       
    00000071 00                     .DATA.B     H'00
    00000072 00000002               .RES.W      1
    00000074              L376:
    00000074 5B55502C38             .SDATA      "[UP,8] Move up"
             5D204D6F76   
             65207570     
    00000082 0A                     .DATA.B     H'0A
    00000083 5B444F574E             .SDATA      "[DOWN, 2] Move down"
             2C20325D20   
             4D6F766520   
             646F776E     
    00000096 0A                     .DATA.B     H'0A
    00000097 5B                     .SDATA      "["
    00000098 E4                     .DATA.B     H'E4
    00000099 2C20345D20             .SDATA      ", 4] Move left"
             4D6F766520   
             6C656674     
    000000A7 0A                     .DATA.B     H'0A
    000000A8 5B52494748             .SDATA      "[RIGHT, 6] Move right"
             542C20365D   
             204D6F7665   
             2072696768   
             74           
    000000BD 0A                     .DATA.B     H'0A
    000000BE 5B45584954             .SDATA      "[EXIT] Game Menu"
             5D2047616D   
             65204D656E   
             75           
    000000CE 00                     .DATA.B     H'00
    000000CF 00000001               .RES.B      1
    000000D0              L378:
    000000D0 536E616B65             .SDATA      "Snake for"
             20666F72     
    000000D9 0A                     .DATA.B     H'0A
    000000DA 436173696F             .SDATA      "Casio fx-9860GII"
             2066782D39   
             3836304749   
             49           
    000000EA 0A0A                   .DATA.B     H'0A,H'0A
    000000EC 6279204D61             .SDATA      "by Max Haag"
             7820486161   
             67           
    000000F7 00                     .DATA.B     H'00
B_B 00000000              _BR_Size:                        ; static: BR_Size




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 03:04:30  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000000 00000004               .RES.L      1




























































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jan-2021 03:04:30  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      162



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000001F0 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               000000F8 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000008 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000300 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           19
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           6
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            53






















*** COMMAND PARAMETER ***


  -subcommand=C:\DOCUME~1\milky\LOCALS~1\Temp\hmk56F.tmp 

